name: 'Run E2E Tests'
description: "Runs Adyen Prestashop E2E Tests"

inputs:
  GH_PAT:
    description: "Personal access token for the repository"
    required: true
  PRESTASHOP:
    description: "The Prestashop version that is used to run the tests."
    required: true
  MYSQL:
    description: "The Mysql version"
    required: true  
  PHP:
    description: "The PHP Version that is used for the Shopware container."
    required: true
  API_KEY_TEST:
    description: "The test api key for adyen."
    required: true
  API_KEY_LIVE:
    description: "The live api key for adyen."
    required: true
  ADMIN_USERNAME:
    description: "The username for the backoffice."
    required: true
  ADMIN_PASSWORD:
    description: "The password for the backoffice."
    required: true
  PORT:
    description: "The port of the shop."
    required: true
  NGROK:
    description: "The token of the ngrok."
    required: true
  NODE:
    description: "The Node Version that is used for the E2E Tests."
    required: true
  PRESTASHOP_TEST_REPO:
    description: "The repository housing the shopware5 e2e tests"
    required: true
  COMMON_TEST_REPO:
    description: "The repository housing the common part of the e2e tests"
    required: true
  _ZIP_FILE:
    description: 'This is the defined filename of the ZIP file that we use for the installation of the plugin'
    default: '~/.build/adyenofficial.zip'
    required: false
runs:
  using: "composite"
  steps:

    - name: Download Docker
      shell: bash
      run: docker pull -q prestashop/prestashop:${{ inputs.PRESTASHOP }}
    
    - name: Download MySql
      shell: bash
      run: docker pull -q mysql:${{inputs.MYSQL}}
   
    - name: Create network 
      shell: bash
      run:  docker network create -d bridge prestashop-network
    
    - name: Run Db
      shell: bash
      run: docker run --name db --network=prestashop-network --env MYSQL_ROOT_PASSWORD=prestashop --env MYSQL_DATABASE=prestashop -d mysql:${{inputs.MYSQL}}
      
    - name: Start Shop
      shell: bash
      run: |
        docker run -p ${{ inputs.PORT }}:80 --name prestashop --network=prestashop-network \
        --env PHP_VERSION=${{ inputs.PHP }} --env DB_NAME=prestashop --env DB_SERVER=db --env DB_PASSWD=prestashop --env PS_FOLDER_INSTALL=install  \
        --env PS_INSTALL_AUTO=1 --env PS_DOMAIN=localhost --env PS_FOLDER_ADMIN=admin1 \
        -d prestashop/prestashop:${{ inputs.PRESTASHOP }}
        sleep 80
   
    - name: Extend memory
      shell: bash
      run: |
        docker exec prestashop bash -c "cd /usr/local/etc/php/conf.d/ && echo 'memory_limit = 4096M' >> /usr/local/etc/php/conf.d/docker-php-memlimit.ini"
        docker exec prestashop bash -c "echo 'max_execution_time = 120' >> /usr/local/etc/php/conf.d/docker-php-maxexectime.ini"

    - name: Upload ZIP File to Docker
      shell: bash
      run: |
        docker cp ${{ inputs._ZIP_FILE }} prestashop:/var/www/html/modules/adyenofficial.zip
        docker exec prestashop bash -c 'cd /var/www/html/modules && unzip -qq -o adyenofficial.zip'


    - name: Install Plugin
      shell: bash
      run: |
        docker exec prestashop bash -c 'php bin/console prestashop:module install adyenofficial'
        docker exec prestashop bash -c 'php bin/console prestashop:module enable adyenofficial'
        docker exec -d prestashop bash -c 'php bin/console prestashop:module disable welcome'
        docker exec prestashop bash -c 'chmod -R 777 /var/www/html/var/cache'
        sleep 60

    - name: Clone Code
      uses: actions/checkout@v3
      with:
        repository: ${{inputs.PRESTASHOP_TEST_REPO}}
        path: tests
        token: ${{ inputs.GH_PAT }}

    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.NODE }}

    - name: Install Node dependencies
      working-directory: ./tests
      run:
        npm install
      shell: bash

    - name: Install common
      shell: bash
      run: npm install https://${{inputs.GH_PAT}}@github.com/${{inputs.COMMON_TEST_REPO}}#feature/prestashop

    - name: Install Playwright Browsers
      working-directory: ./tests
      shell: bash
      run: npx playwright install --with-deps > /dev/null

    - name: Run Playwright tests
      shell: bash
      working-directory: ./tests
      run: npm run test
      env:
        API_KEY_TEST: ${{ inputs.API_KEY_TEST }}
        API_KEY_LIVE: ${{ inputs.API_KEY_LIVE }}
        PORT: ${{ inputs.PORT }}
        NGROK: ${{ inputs.NGROK }}
        ADMIN_USERNAME: ${{ inputs.ADMIN_USERNAME }}
        ADMIN_PASSWORD: ${{ inputs.ADMIN_PASSWORD }}
        BACKEND_SHOP_URL: "localhost"
        TEST_PATH: "/module/adyenofficial/test"
        ADMIN_PATH: "/admin1"
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report-Prestashop-${{ inputs.PRESTASHOP }}-PHP-${{ inputs.PHP }}
        path: ./tests/playwright-report/
        retention-days: 30  
    - name: Remove Ayden plugin
      shell: bash
      run: |
        docker exec prestashop bash -c 'php bin/console prestashop:module uninstall adyenofficial'
        docker exec prestashop bash -c 'rm -rf /var/www/html/modules/adyenofficial'